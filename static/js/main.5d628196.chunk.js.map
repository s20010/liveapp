{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Api","props","state","url","data","address1","address2","address3","document","title","a","JsonP","this","then","res","json","results","setState","alert","eito","live","bind","onClick","Click","getData","event","target","value","React","Component","ViewInput","type","onChange","ViewButton","Button","variant","color","ViewTown","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","getElementById"],"mappings":"mQAGMA,E,kDACJ,WAAaC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACXC,IAAK,KACLC,KAAM,CACJC,SAAU,KACVC,SAAU,KACVC,SAAU,OAGd,EAAKJ,IAAM,2CAVO,E,qDAapB,WACEK,SAASC,MAAQ,6B,4DAGnB,iCAAAC,EAAA,+EAEuBC,IAAMC,KAAKV,MAAMC,KACjCU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,OAAIA,EAAIE,QAAQ,MACxBH,MAAK,SAAAC,GACJ,IAAMT,EAAWS,EAAIT,SACfC,EAAWQ,EAAIR,SACfC,EAAWO,EAAIP,SACrB,EAAKU,SAAS,CACZb,KAAM,CACJC,SAAUA,EACVC,SAAUA,EACVC,SAAUA,QAbtB,6DAkBIW,MAAM,4EAlBV,wD,0EAqBA,WACE,OACE,qCACE,4EACA,cAAC,EAAD,CAAWC,KAAMP,KAAKQ,KAAKC,KAAKT,QAChC,cAAC,EAAD,CAAYU,QAASV,KAAKW,MAAMF,KAAKT,QACrC,cAAC,EAAD,CAAUR,KAAMQ,KAAKV,MAAME,Y,mBAKjC,WACEQ,KAAKY,Y,kBAGP,SAAMC,GACJ,IAAMtB,EAAMS,KAAKT,IAAM,YAAcsB,EAAMC,OAAOC,MAClDf,KAAKK,SAAS,CAAEd,IAAKA,Q,GAxDPyB,IAAMC,WA4DlBC,EAAY,SAAA7B,GAChB,OAAO,uBAAO8B,KAAK,SAASC,SAAU/B,EAAMkB,QAExCc,EAAa,SAAAhC,GACjB,OACE,cAACiC,EAAA,EAAD,CACEZ,QAAS,kBAAMrB,EAAMqB,WACrBa,QAAQ,YACRC,MAAM,YAHR,2BASEC,EAAW,SAAApC,GACf,OACE,qCACE,6BAAKA,EAAMG,KAAKC,WAChB,6BAAKJ,EAAMG,KAAKE,WAChB,6BAAKL,EAAMG,KAAKG,eAKPP,IC3EAsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFzC,SAAS0C,eAAe,SAM1BZ,M","file":"static/js/main.5d628196.chunk.js","sourcesContent":["import React from 'react'\nimport { Button } from '@material-ui/core'\nimport JsonP from 'fetch-jsonp'\nclass Api extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      url: null,\n      data: {\n        address1: null,\n        address2: null,\n        address3: null\n      }\n    }\n    this.url = 'https://zipcloud.ibsnet.co.jp/api/search'\n  }\n\n  componentDidMount () {\n    document.title = '郵便検索'\n  }\n\n  async getData () {\n    try {\n      const data = await JsonP(this.state.url)\n        .then(res => res.json())\n        .then(res => res.results[0])\n        .then(res => {\n          const address1 = res.address1\n          const address2 = res.address2\n          const address3 = res.address3\n          this.setState({\n            data: {\n              address1: address1,\n              address2: address2,\n              address3: address3\n            }\n          })\n        })\n    } catch {\n      alert('郵便番号に誤りがあります')\n    }\n  }\n  render () {\n    return (\n      <>\n        <h1>郵便番号を入力</h1>\n        <ViewInput eito={this.live.bind(this)} />\n        <ViewButton onClick={this.Click.bind(this)} />\n        <ViewTown data={this.state.data} />\n      </>\n    )\n  }\n\n  Click () {\n    this.getData()\n  }\n\n  live (event) {\n    const url = this.url + '?zipcode=' + event.target.value\n    this.setState({ url: url })\n  }\n}\n\nconst ViewInput = props => {\n  return <input type='number' onChange={props.eito} />\n}\nconst ViewButton = props => {\n  return (\n    <Button\n      onClick={() => props.onClick()}\n      variant='contained'\n      color='secondary'\n    >\n      検索\n    </Button>\n  )\n}\nconst ViewTown = props => {\n  return (\n    <>\n      <h3>{props.data.address1}</h3>\n      <h3>{props.data.address2}</h3>\n      <h3>{props.data.address3}</h3>\n    </>\n  )\n}\n\nexport default Api\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}